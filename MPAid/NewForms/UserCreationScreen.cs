using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MPAid.NewForms
{
    public partial class UserCreationScreen : Form
    {
        private string username = null;
        private string usercode = null;

        /// <summary>
        /// Default Constructor.
        /// </summary>
        public UserCreationScreen()
        {
            InitializeComponent();
        }

        /// <summary>
        /// Gets the values of the user from the text boxes, and uses them to create an MPAi user object.
        /// </summary>
        /// <returns>The created user object.</returns>
        public MPAiUser getCandidate()
        {
            username = userNameBox.Text;
            usercode = passwordBox.Text;

            return (new MPAiUser(username, usercode));
        }

        private void UserCreationScreen_Load(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void tableLayoutPanel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void label5_Click(object sender, EventArgs e)
        {

        }

        private void groupBox1_Enter(object sender, EventArgs e)
        {

        }

        private void groupBox1_Enter_1(object sender, EventArgs e)
        {

        }

        private void label5_Click_1(object sender, EventArgs e)
        {

        }

        private void tableLayoutPanel3_Paint(object sender, PaintEventArgs e)
        {

        }

        /// <summary>
        /// Ensures that the new user is valid, and closes the window.
        /// </summary>
        private void createUser()
        {
            if (userNameBox.Text.Trim() == "")
            {
                MessageBox.Show("Username should not be empty! ",
                  "Oops", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                return;
            }
            else if ((passwordBox.Text.Trim() == "") || (confirmPasswordBox.Text.Trim() == ""))
            {
                MessageBox.Show("Passwords should not be empty! ",
                   "Oops", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                return;
            }
            else if (passwordBox.Text != confirmPasswordBox.Text)
            {
                MessageBox.Show("Passwords do not match! ",
                    "Oops", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                return;
            }

            MPAiUser candidate = getCandidate();

            if (!UserManagement.CreateNewUser(candidate))
            {
                MessageBox.Show("User already exists, please use a different name! ",
                    "Oops", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
            else
            {
                MessageBox.Show("Registration successful! ",
                        "Congratulations", MessageBoxButtons.OK, MessageBoxIcon.Information);
                UserManagement.WriteSettings();
                LoginWindow loginWindow = (LoginWindow)this.Owner;      // Only LoginWindow can open this form.
                loginWindow.VisualizeUser(candidate.getName(), candidate.getCode());
                this.Close();
            }
        }

        /// <summary>
        /// Closes the window if the operation is cancelled.
        /// </summary>
        /// <param name="sender">Automatically generated by Visual Studio.</param>
        /// <param name="e">Automatically generated by Visual Studio.</param>
        private void cancelButton_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void okayButton_Click(object sender, EventArgs e)
        {
            createUser();
        }

        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void radioButton2_CheckedChanged(object sender, EventArgs e)
        {

        }
    }
}
