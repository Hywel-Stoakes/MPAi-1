Quick Start.txt


Since I am hoping this may be used by people other than engineers, I've written this to explain how to use this program quickly and effectively.



********
Step one - preparing your data!
********


The first thing you will need to do is prepare your data.  You will need training data and testing data.  This should be in the microsoft .wav format.  You will also require label files for each file.  If a file is named 'extract.wav' the corresponding label file must be 'extract.lab'.  There is no way around this.  However these label files are easy to create, as they are just transcriptions.

The label file must be in the following format:

If the words in the extract are:  "i ngä tutuku o te motu katoa ä o waikato anahe ränei" the label file must contain:

i 
ngä 
tutuku 
o 
te 
motu 
katoa 
ä 
o 
waikato 
anahe 
ränei

That is all that is required inside each label file.  The training files (both .wav and .lab) should be in the 'train' directory, and the test files (both .wav and .lab) shoud be in the 'test' directory, for easy reference.  However, TESTING files require one extra addition – the word ‘silence’ should be included wherever there is a break (silence) in the recording.  Usually these occur at the beginning and end of the recordings.


********
Step two - configuring the package!
********

There are two parts to the configuration section.  First, the "words.mlf" file must be created.

A 'master label file', or 'mlf', is a file that contains all the label files present for a certain set of recordings.  The "words.mlf" file includes all the transcripts for the extracts used in training the system.  If you were training on two recordings (extract-1.wav and extract-2.wav) that are present in the 'train' directory (along with their label files) the format of the mlf would be as follows:


#!MLF!#
"*/extract-1.lab"
this
is
the
first
label
file
.

"*/extract-2.lab"
this
is
the
second
label
file's
contents


NOTE:  There must be a period (.) BETWEEN each file... but not at the end of the master label file.  There must also be a spare line at the end of the file, after the last word (in this case after the word 'contents')

The "words.mlf" file should be placed in the 'user' directory.  You'll note there is one already in there, in the required format.



The second part of configuring the package is to modify the script files.  (Don't worry, it's not nearly as hard as it sounds).  These files do one simple purpose - at that is to tell the program WHERE the .wav and .lab files are!  It's very simple.  There are four files to modify - two for training, and two for testing.


The first two script files are called 'codetr.scp' and 'codettest.scp'.  The purpose of this file is to tell the program where the .wav files are (both for testing and training) so the program can convert them into "Mel Frequency Co-efficients."  These co-efficients are then used to develop "hidden markov models" which are used in the forced alignment process.  The file produced is a '*.mfc' file.

The format of these first two files (codetr.scp and codettest.scp) should be as following:

sourcefile targetfile
sourcefile2 targetfile2
etc.

and should include the full directory path.  For example, if you were training the system on two files, extract-1 and extract 2 (which are both in the 'train' directory, in the MFAP folder, which is on the C drive) and were wanting to perform forced alignment on extract-3 and extract-4 (which are both in the 'test' directory, in the MFAP folder, which is on the C drive) the files would look like this:

codetr.scp:

C:\MFAP\train\extract-1.wav C:\MFAP\train\extract-1.mfc
C:\MFAP\train\extract-2.wav C:\MFAP\train\extract-2.mfc

and codettest.scp:

C:\MFAP\test\extract-3.wav C:\MFAP\test\extract-3.mfc
C:\MFAP\test\extract-4.wav C:\MFAP\test\extract-4.mfc


you can see that extract-1.wav turns into extract-1.mfc, and is put in the same directory as the .wav file.
NOTE:  No files are deleted in this process.


The second two files are called 'train.scp' and 'test.scp' and are even simpler than the previous file.  They contain only the 'mel frequency co-efficient' files that we created in the previous step.  Once again, train.scp contains the training data, and test.scp contains the test data.

The files would look like this:

train.scp:

C:\MFAP\train\extract-1.mfc
C:\MFAP\train\extract-2.mfc

and test.scp:

C:\MFAP\test\extract-3.mfc
C:\MFAP\test\extract-4.mfc

And that's all the modification you will need to do.


NOTE:  Codetr.scp, codettest.scp, train.scp and test.scp MUST be in the 'user' directory.  You will be able to find a copy of these files already in there, from which you will be able to see the correct formatting.


**********
Step three - running the recogniser!
**********


Assuming nothing else has been modified, then you will only need to double click the 'go.bat' file, or type 'go' in the command prompt.  Again assuming there are no strange convergence errors, this should happily perform forced alignment on the testing files, based on the information gained from the training files.

*****
NOTE:  Go2.bat will also perform force alignment, but with an improved short pause model.  I recommend using this file!
*****

There will be two output files.  The first is 'output.mlf'.  Output.mlf is a master label file in the HTK format - including beginning and end times of the phonemes, and the associated phoneme.  The second is 'results.mlf'.  Results.mlf is the exact same information, but arranged in the EMU label format.

However, it's still in master label file form.  You will need to create .pvi files (just create a txt file and rename it extract-3.pvi , if extract-3 is the name of the file you tested) and copy the information for each file into the new .pvi file.

The .pvi files should look something like this:


signals extract-3
nfields 1
#
	0.02546		125	a
	0.03142		125	n
	0.05002		125	sp
	etc.

NOTE:  'sp' stands for short pause... everything else is based on Maori standard phonemes (which I have based on a paper provided to me... funnily enough I have no idea who it's by ;) )


*********
Step four - modifying the program!
*********

I am 100% confident that this system still requires some fine tuning... and indeed upgrading, as more research is done on the Maori language.  It will be difficult to modify this program without at the very least a good understanding of the HTK software.

I highly recommend reading the HTK book, especially the tutorial.  Hopefully this will prove useful!



Cheers, I hope you find this useful.
Sam

